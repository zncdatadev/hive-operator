## Reference: https://github.com/helm/chart-testing-action
name: Chart Linting and Testing
on:
  push:
    branches:
      - "main"
  pull_request:


env:
  VERSION: ${{ github.ref_type == 'tag' && github.ref_name || '0.0.0-dev' }}


jobs:
  check-crds-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Clone the code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - name: Check CRDs sync
        run: |
          # Use `make manifests` to generate the CRDs
          make manifests
          # Check if the CRDs are in sync with the manifests
          if ! git diff --exit-code; then
            echo "CRDs are not in sync with the manifests."
            echo "Please run 'make manifest' to update the CRDs."
            exit 1
          fi

  linter-artifacthub:
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/artifacthub/ah:v1.14.0
      options: --user 1001
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run ah lint
        working-directory: deploy/helm
        run: ah lint

  lint-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@v4.3.0

      - uses: actions/setup-python@v6
        with:
          python-version: '3.x'
          check-latest: true

      - name: Setup Chart Linting
        id: lint
        uses: helm/chart-testing-action@v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed=$(ct list-changed --chart-dirs deploy/helm --target-branch ${{ github.event.repository.default_branch }})
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --debug --config ./.github/configs/ct-lint.yaml

      - name: Create kind cluster
        if: steps.list-changed.outputs.changed == 'true'
        uses: helm/kind-action@v1.12.0
        with:
          cluster_name: kind  # Default cluster name is 'chart-testing'

      - name: Load images to cluster
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          make docker-build
          kind load docker-image quay.io/zncdatadev/hive-operator:${{ env.VERSION }}


      - name: Run chart-testing (install)
        id: ct-test
        if: steps.list-changed.outputs.changed == 'true'
        run: |
          ct install --config ./.github/configs/ct-install.yaml
          # Save success result to github output
          if [[ $? -eq 0 ]]; then
            echo "ct_tested=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Run e2e with chart
        if: steps.ct-test.outputs.ct_tested == 'true'
        run: |
          # Add kubedoop helm repo
          helm repo add kubedoop https://zncdatadev.github.io/kubedoop-helm-charts/

          HELM_DEPENDENCIES=(
            commons-operator
            listener-operator
            secret-operator
          )

          # Install dependencies
          for dep in "${HELM_DEPENDENCIES[@]}"; do
            helm upgrade --install --create-namespace --namespace kubedoop-operators --wait $dep kubedoop/$dep
          done

          # Install hive-operator chart
          helm install --create-namespace --namespace hive-operators --wait hive-operator ./deploy/helm/hive-operator

          # E2E tests
          make chainsaw
          ./bin/chainsaw test --test-dir ./test/e2e/
